{"version":3,"sources":["components/Person.js","components/PersonsList.js","components/PersonForm.js","components/Filter.js","services/numbers.js","components/Notification.js","App.js","index.js"],"names":["Person","person","handleDeletePerson","name","number","onClick","Persons","persons","map","key","PersonForm","props","onSubmit","addNewName","value","newName","onChange","handleOnChangeName","newNumber","handleOnChangeNumber","type","Filter","newFilter","handleOnChangeFilter","axios","get","then","response","data","newPerson","post","id","deleteURL","delete","updatePersonURL","put","errorStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","successStyle","Notification","message","notificationClass","isError","style","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","NotificationMessage","setNotificationMessage","setIsError","useEffect","numbersService","initialPersons","updatePerson","existingPerson","find","p","updatedPerson","setTimeout","catch","error","filter","console","log","checkIfDuplicate","some","personsToShow","toLowerCase","includes","e","target","preventDefault","personObject","window","confirm","returnedPerson","concat","err","PersonsList","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c19397ab.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({person, handleDeletePerson}) => {\n    return (\n        <div>\n            {person.name}: {person.number}\n            <button onClick={() => handleDeletePerson(person)}>delete</button>\n        </div>\n    )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ persons, handleDeletePerson }) => {\n    return (\n      <div>\n      {\n        persons.map((person) => {\n          return <Person key={person.name} person={person} handleDeletePerson={handleDeletePerson} />\n        })\n      }      \n      </div>\n    )\n  }\n\n  export default Persons","import React from 'react'\n\nconst PersonForm = (props) => {\n\n    return (\n        <form onSubmit={props.addNewName}>\n            <div>\n                name: \n                <input \n                    value={props.newName} \n                    onChange={props.handleOnChangeName} \n                />\n            </div>\n            <div>\n                number: \n                <input \n                value={props.newNumber} \n                onChange={props.handleOnChangeNumber} \n                />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Filter = (props) => {\n\n    return (\n        <div>\n            filter as shown with: \n            <input \n                value={props.newFilter} \n                onChange={props.handleOnChangeFilter} \n            />\n        </div>\n    )\n}\n\nexport default Filter","import axios from 'axios'\n\nconst relativeURL = '/api/persons'\n\nconst getAllPersons = () => {\n    const request = axios.get(relativeURL)\n    return request.then(response => response.data)\n}\n\nconst addNewPerson = (newPerson) => {\n    const request = axios.post(relativeURL, newPerson)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const deleteURL = `${relativeURL}/${id}`\n    const request = axios.delete(deleteURL)\n    return request.then(response => response.data)\n}\n\nconst updatePerson = (id, newPerson) => {\n    const updatePersonURL = `${relativeURL}/${id}`\n    const request = axios.put(updatePersonURL, newPerson)\n    return request.then(response => response.data)\n}\n\nexport default { getAllPersons, addNewPerson, deletePerson, updatePerson }\n","import React from 'react'\n\nconst errorStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n}\n\nconst successStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n}\n\nconst Notification = ({ message, isError }) => {\n\n    const notificationClass = isError ? errorStyle : successStyle\n\n    if(message === null) {\n        return null\n    }\n\n    return (\n        <div style={notificationClass}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport PersonsList from './components/PersonsList'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport numbersService from './services/numbers'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ NotificationMessage, setNotificationMessage ] = useState(null)\n  const [ isError, setIsError ] = useState(false)\n\n  useEffect(() => {\n    numbersService\n      .getAllPersons()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addNewPerson = (e) => {\n    e.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if(!checkIfDuplicate(personObject)) {\n      numbersService  \n        .addNewPerson(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNotificationMessage(\n            `Added ${returnedPerson.name}`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n        .catch(err => console.log(err))\n    } else {\n      if(window.confirm(`${personObject.name} is already added to phonebook , replace the old number with the new one?`)) {\n        updatePerson(personObject)\n      } \n    }\n  }\n\n  const handleOnChangeName = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleOnChangeNumber = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleOnChangeFilter = (e) => {\n    setNewFilter(e.target.value)\n  }\n\n  const handleDeletePerson = (person) => {\n    if(window.confirm(`Delete ${person.name}?`)) {\n      numbersService\n        .deletePerson(person.id)\n        .then(setPersons(persons.filter(p => p.id !== person.id)))\n        .then(() => {\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          alert(`${person.name} was already deleted from the server`)\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n    }\n  }\n\n  const updatePerson = (newPerson) => {\n    const existingPerson = persons.find(p => p.name === newPerson.name)\n\n    numbersService\n      .updatePerson(existingPerson.id, newPerson)\n      .then(updatedPerson => {\n        setPersons(persons.map(p => p.name === updatedPerson.name ? updatedPerson : p))\n        setNewName('')\n        setNewNumber('')\n        setNotificationMessage(\n          `Updated ${updatedPerson.name}`\n        )\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setIsError(true)\n        setNotificationMessage(\n          `Information of ${existingPerson.name} has already been removed from server`\n        )\n        setPersons(persons.filter(p => p.id !== existingPerson.id))\n        setTimeout(() => {\n          setNotificationMessage(null)\n          setIsError(false)\n        }, 5000)\n        console.log(error)\n      })\n  }\n\n  const checkIfDuplicate = (props) => persons.some(person => person.name === props.name)\n\n  const personsToShow = newFilter === '' ?\n    persons :\n    persons.filter(person => newFilter.toLowerCase().includes(person.name.toLowerCase()))\n \n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={NotificationMessage} isError={isError}/>\n\n      <Filter\n        newFilter={newFilter}\n        handleOnChangeFilter={handleOnChangeFilter}\n      />\n\n      <h2>Add a new</h2>\n      <PersonForm \n        newName={newName}\n        newNumber={newNumber}\n        addNewName={addNewPerson} \n        handleOnChangeName={handleOnChangeName} \n        handleOnChangeNumber={handleOnChangeNumber}\n      />\n\n      <h2>Numbers</h2>\n      <PersonsList persons={personsToShow} handleDeletePerson={handleDeletePerson} />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}